# .github/workflows/e2e-tests.yml
name: End-to-End Tests

on:
  push:
    branches:
      - main # Run on pushes to main
  pull_request:
    branches:
      - main # Also run on PRs targeting main

jobs:
  e2e_tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # --- Setup Phase ---

      # Note: Removed Docker Buildx setup, Login, Build & Push steps
      # as the target docker-stack.yml uses pre-built public images.
      # Add them back ONLY if your stack requires custom-built images.

      # Note: Removed 'Create Dummy Secret Files' step.
      # Assumes the docker-stack.yml uses Docker Swarm secrets created below,
      # and does NOT mount local files from a './secrets' directory.
      # If local secret files ARE needed for mounts or pre-deploy scripts, add that step back.

      - name: Create Dummy Nginx Config
        # Needed because the nginx service likely mounts this file (adjust if using Docker Configs)
        run: |
          mkdir -p ./nginx # Ensure directory exists if referenced
          # Basic Nginx config proxying to FPM service named 'wordpress_fpm'
          echo "server { listen 80; server_name _; root /var/www/html; index index.php index.html; location / { try_files \$uri \$uri/ /index.php?\$args; } location ~ \.php$ { try_files \$uri =404; fastcgi_pass wordpress_fpm:9000; fastcgi_index index.php; include fastcgi_params; fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name; } }" > ./nginx.conf
        shell: bash

      - name: Initialize Docker Swarm
        # Required for 'docker stack deploy'
        run: docker swarm init

      - name: Create Dummy Docker Swarm Secrets
        # Required for 'docker stack deploy' to find secrets defined in the stack file
        run: |
          echo "dummy_e2e_root_password" | docker secret create mysql_root_password -
          echo "dummy_e2e_user_password" | docker secret create mysql_password -
          # Add 'docker secret create' for other secrets defined in your stack file
        shell: bash

      # --- Deployment Phase ---

      - name: Deploy Docker Stack
        # Deploy the stack defined in docker-stack.yml, name it 'e2e_wp_stack'
        # Use the actual stack file name here.
        run: docker stack deploy -c docker-stack.yml e2e_wp_stack

      - name: Wait for Application Service to be Ready
        # Poll the main application endpoint (e.g., WordPress via Traefik/Nginx on port 80)
        # Increase timeout if needed (e.g., 180s)
        # Use '--fail' to exit loop on success, '--silent --output /dev/null' to hide output
        run: |
          echo "Waiting for application service via ingress on http://localhost ..."
          timeout 120s bash -c 'until curl --fail --silent --output /dev/null http://localhost; do echo "Still waiting..."; sleep 5; done'
          echo "Application service appears ready!"
        shell: bash

      # --- Testing Phase ---
      # TODO: Implement more robust E2E tests using frameworks like Cypress, Playwright,
      # or more detailed script-based checks (e.g., checking login, specific content).

      - name: Run Basic Application Reachability Test
        # Check if the main page loads via ingress (e.g., Traefik/Nginx) on port 80 and returns HTTP 200 OK
        # --show-error provides more info on failure, --verbose shows request/response details
        run: curl --fail --show-error --verbose http://localhost

      # --- Debugging on Failure ---

      - name: Show Docker Logs on Failure
        # If any step fails, dump the logs from key services for easier debugging
        if: failure()
        run: |
          echo "--- Docker Service Logs (Attempting on Failure) ---"
          # !!! IMPORTANT: Adjust the service names below to match your docker-stack.yml !!!
          docker service logs e2e_wp_stack_wordpress_fpm || echo "Failed to get wordpress_fpm logs (or service name is different)"
          docker service logs e2e_wp_stack_nginx || echo "Failed to get nginx logs (or service name is different)"
          docker service logs e2e_wp_stack_mysql || echo "Failed to get mysql logs (or service name is different)"
          # Add logs for other relevant services (e.g., redis, traefik)
        shell: bash

      # --- Cleanup Phase ---

      - name: Stop Docker Stack
        # Use if: always() to ensure cleanup happens even if tests fail
        if: always()
        run: docker stack rm e2e_wp_stack

      - name: Prune Docker System Resources
        # Remove stopped containers, networks, build cache, and importantly VOLUMES
        if: always()
        run: docker system prune -af --volumes

      # Optional: Leave Swarm mode (usually not needed for ephemeral runners)
      # - name: Leave Docker Swarm
      #   if: always()
      #   run: docker swarm leave --force
